{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,gBAAgB,CAAC,MACjC,EAAY,EAAM,aAAa,CAAC,SAEtC,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,EAAW,EACb,EACF,GAEA,IAAM,EAAa,SAAC,CAApB,EACE,IAAM,EAAO,MAAM,IAAI,CAAC,EAAU,gBAAgB,CAAC,OAEnD,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAQ,EAAK,gBAAgB,CAAC,KAAK,CAAC,EAAM,CAAC,SAAS,CACpD,EAAQ,EAAK,gBAAgB,CAAC,KAAK,CAAC,EAAM,CAAC,SAAS,CAEpD,EAAO,SAAS,EAAM,OAAO,CAAC,MAAO,KACrC,EAAO,SAAS,EAAM,OAAO,CAAC,MAAO,YAE3C,AAAI,AAAC,MAAM,IAAU,MAAM,GAIvB,EAAQ,EACH,EAGL,EAAQ,EACH,GAGF,EAXE,EAAO,CAYlB,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAU,WAAW,CAAC,EACxB,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar headers = table.querySelectorAll(\"th\");\nvar tableBody = table.querySelector(\"tbody\");\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        sortColumn(index);\n    });\n});\nvar sortColumn = function(index) {\n    var rows = Array.from(tableBody.querySelectorAll(\"tr\"));\n    rows.sort(function(rowA, rowB) {\n        var cellA = rowA.querySelectorAll(\"td\")[index].innerHTML;\n        var cellB = rowB.querySelectorAll(\"td\")[index].innerHTML;\n        var numA = parseInt(cellA.replace(/\\D/g, \"\"));\n        var numB = parseInt(cellB.replace(/\\D/g, \"\"));\n        if (!isNaN(numA) && !isNaN(numB)) return numA - numB;\n        if (cellA > cellB) return 1;\n        if (cellA < cellB) return -1;\n        return 0;\n    });\n    rows.forEach(function(newRow) {\n        tableBody.appendChild(newRow);\n    });\n};\n\n//# sourceMappingURL=index.c65fb519.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tableBody = table.querySelector('tbody');\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    sortColumn(index);\n  });\n});\n\nconst sortColumn = (index) => {\n  const rows = Array.from(tableBody.querySelectorAll('tr'));\n\n  rows.sort((rowA, rowB) => {\n    const cellA = rowA.querySelectorAll('td')[index].innerHTML;\n    const cellB = rowB.querySelectorAll('td')[index].innerHTML;\n\n    const numA = parseInt(cellA.replace(/\\D/g, ''));\n    const numB = parseInt(cellB.replace(/\\D/g, ''));\n\n    if (!isNaN(numA) && !isNaN(numB)) {\n      return numA - numB;\n    }\n\n    if (cellA > cellB) {\n      return 1;\n    }\n\n    if (cellA < cellB) {\n      return -1;\n    }\n\n    return 0;\n  });\n\n  rows.forEach((newRow) => {\n    tableBody.appendChild(newRow);\n  });\n};\n"],"names":["table","document","querySelector","headers","querySelectorAll","tableBody","forEach","header","index","addEventListener","sortColumn","rows","Array","from","sort","rowA","rowB","cellA","innerHTML","cellB","numA","parseInt","replace","numB","isNaN","newRow","appendChild"],"version":3,"file":"index.c65fb519.js.map"}